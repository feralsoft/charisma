export def VNode(@name, @attrs, @children) end

def VNode:prototype.(Meta:create)(...children) =
  VNode[this:name this:attrs [...this:children, ...children]]

def VNode:prototype.at(key) = this:attrs.at(key)

def VNode:prototype.(Symbol:iterator) = this:children.(Symbol:iterator)

def Keyword:prototype.(Meta:create)(...children) =
  VNode[this nil children]

def Keyword:prototype.(Meta:from_entries)(entries)
  entries = entries.into({})
  let attrs = entries.delete(:children).into({})
  let children = entries:children
  return VNode[this attrs children]
end
