:root {
    background-color: rgb(31, 31, 31);
    margin-top: 2em;
    --spacing: 0.25em;
    --brace-color: #d8a90c;
    --outline-color: #ffffff17;
    --number-color: #b5cea8;
    --class-color: #d7ba7d;
    --function-color: #dcdcaa;
    --property-name-color: #9cdcfe;
    --variable-color: #9cdcfe;
    --string-color: #ce9178;
    --attribute-color: var(--property-name-color);
    --foreground-color: #ccc;
    --at-rule-color: #c586c0;
    color: var(--foreground-color);
    font-size: 18px;
    font-family: Berkeley Mono;
}

.--editor {
    padding: 0.5rem;
    display: flex;
    flex-direction: column;
    gap: var(--spacing);
    background-color: rgba(255, 255, 255, 0.1);
    padding: 1em;
}

[data-kind="color"][data-hash="#"] [data-value]::before {
    content: "#";
    color: var(--function-color);
}

[data-kind="multi-part-value"] {
    display: flex;
    gap: 0.25em;
}

[data-kind="pseudo-class-id"] > [data-value] {
    color: var(--class-color);

    &::before {
        content: ":";
    }
}

[data-attr] {
    display: flex;
}

[data-kind="unit"] {
    display: flex;
    color: var(--number-color);
}

[data-kind="rule"]::after {
    content: "}";
}

[data-kind="property"] > [data-attr="name"] {
    color: var(--property-name-color);
}

[data-kind="selector_modifier"] {
    display: flex;
}

[data-kind="child_selector"] {
    display: flex;
    gap: 0.25em;
}

[data-attr="properties"] {
    [data-value]:hover,
    [data-value]:focus {
        outline: var(--outline-color) solid 0.1em;
    }
    /* TODO: start */
    [data-kind]:hover:not(:has([data-kind]:hover)) {
        outline: var(--outline-color) solid 0.1em;
    }

    [data-kind]:hover:not(:has([data-kind]:hover, [data-value]:hover)) {
        outline: var(--outline-color) solid 0.1em;
    }
    /* TODO: end */
}
[data-attr="inherited-properties"],
[data-attr="inherited-vars"] {
    [data-kind="property"]:hover {
        outline: var(--outline-color) solid 0.1em;
    }
}

[data-kind="rem"],
[data-kind="em"] {
    display: flex;
}

[data-kind="rem"] > [data-attr="value"]::after {
    content: "rem";
    color: var(--function-color);
}

[data-kind="em"] > [data-attr="value"]::after {
    content: "em";
    color: var(--function-color);
}

[data-kind="property"][data-property-kind="variable"] > [data-attr="name"] {
    color: var(--variable-color);
}

[data-kind="pseudo_selector_without_args"] > [data-attr="name"] {
    color: var(--class-color);

    &::before {
        content: ":";
        color: var(--class-color);
    }
}

[data-kind="pseudo-element-selector"] {
    color: var(--class-color);

    [data-value]::before {
        content: "::";
    }
}

[data-kind="element_selector"] {
    color: var(--class-color);
}

[data-kind="string"] {
    color: var(--string-color);
}

[data-kind="rule"][data-self_sub_rule="true"] > [data-attr="selector"]::before {
    content: "&";
    margin-right: -2px;
    color: var(--foreground-color);
}

[data-kind="rule"] > [data-attr="selector"] {
    display: flex;
    gap: 0.25em;

    &::after {
        display: flex;
        flex-direction: column;
        justify-content: end;
        content: "{";
    }

    [data-attr="name"] {
        width: max-content;
    }
}

[data-kind="rule"]
    > :is(
        [data-attr="properties"],
        [data-attr="inherited-properties"],
        [data-attr="inherited-vars"]
    ) {
    display: flex;
    flex-direction: column;
    gap: var(--spacing);
    padding-top: var(--spacing);
    padding-bottom: var(--spacing);
}

[data-kind="rule"]
    > :is([data-attr="inherited-properties"], [data-attr="inherited-vars"]) {
    opacity: 0.8;

    &::before {
        font-size: 0.5em;
    }
}

[data-kind="rule"] > [data-attr="inherited-properties"] {
    &:not(:has([data-kind])) {
        display: none;
    }

    &:has([data-kind])::before {
        content: "inherited properties";
    }
}

[data-kind="rule"] > [data-attr="inherited-vars"] {
    &:not(:has([data-kind])) {
        display: none;
    }

    &:has([data-kind])::before {
        content: "inherited variables";
    }
}

[data-kind="rule"] [data-kind="property"].highlighted {
    animation: highlight 1.5s linear forwards;
}

@keyframes highlight {
    0% {
        background-color: rgba(222, 244, 64, 0.1);
    }
    90% {
        background-color: rgba(222, 244, 64, 0.1);
    }
    100% {
        background-color: none;
    }
}

[data-kind="rule"] [data-attr="properties"] .input {
    font-size: 1em;
    color: var(--foreground-color);
    font-family: Berkeley Mono;
    margin-left: 1em;
    background: none;
    padding-bottom: 0.1em;
    height: 0.5em;

    &:is(:focus, :focus-within) {
        animation: expand 50ms linear forwards;

        &:before {
            display: none;
        }
    }

    &:not(:focus-within, :focus) {
        border: none;
        cursor: pointer;
    }
    &:hover::before {
        color: white;
    }

    &::before {
        content: "+";
        position: absolute;
        margin-top: -0.25em;
        /* margin-left: -1em; */
    }
}

@keyframes expand {
    0% {
        height: 0.5em;
        border-bottom: 0 solid rgb(0, 0, 0, 0);
    }

    100% {
        height: 1em;
        border-bottom: 0.1em solid rgb(20, 20, 20);
    }
}

[data-kind="property"] {
    display: flex;
    gap: 0.25em;
    padding-left: 1em;

    & > [data-attr="name"] {
        width: 100%;

        &::after {
            content: ":";
            color: var(--foreground-color);
        }
    }

    &::after {
        margin-left: -0.25em;
        content: ";";
        color: var(--foreground-color);
    }
}

[data-unit-type]::after {
    color: var(--function-color);
    content: attr(data-unit-type);
}

[data-kind="class"] {
    display: flex;
    color: var(--class-color);

    &::before {
        content: ".";
    }
}

[data-kind="number"] {
    [data-value] {
        color: var(--number-color);
    }

    display: flex;
}

[data-kind="function"] {
    display: flex;

    [data-attr="name"] {
        color: var(--function-color);
    }

    [data-attr="args"] {
        &::before {
            content: "(";
        }

        > [data-kind]:not(:last-child)::after {
            content: ",";
        }

        &::after {
            content: ")";
        }
    }
}

[data-kind="hex"],
[data-kind="hex_short"],
[data-kind="hex_a"] {
    display: flex;

    &::before {
        content: "#";
        color: var(--function-color);
    }

    [data-attr] {
        color: var(--foreground-color);
    }
}

[data-kind="hex"],
[data-kind="hex_a"],
[data-kind="hex_short"],
[data-kind="rgb"],
[data-kind="rgba"] {
    & > [data-attr="r"] [data-value] {
        background-color: rgba(255, 0, 0, 0.1);
    }

    & > [data-attr="g"] [data-value] {
        background-color: rgba(0, 255, 0, 0.1);
    }

    & > [data-attr="b"] [data-value] {
        background-color: rgba(0, 0, 255, 0.1);
    }

    & > [data-attr="a"] [data-value] {
        background-color: var(--outline-color);
    }
}

[data-kind="compound-selector"] {
    display: flex;
}

[data-kind="attribute-selector"] {
    display: flex;
    color: var(--attribute-color);

    &::before,
    &::after {
        color: var(--brace-color);
    }

    &::before {
        content: "[";
    }

    &::after {
        content: "]";
    }

    > [data-attr="value"] {
        color: var(--string-color);
    }
}

[data-kind="dashed-id"] {
    color: var(--variable-color);
}

[data-kind="pseudo_selector_with_args"] {
    display: flex;
    color: var(--class-color);

    &::before,
    &::after,
    ::before,
    ::after {
        color: var(--foreground-color);
    }

    & > [data-attr="args"] {
        display: flex;

        & > [data-kind]:not(:last-child)::after {
            content: ",";
        }
    }

    & > [data-attr="name"] > [data-value]::before {
        content: ":";
        color: var(--class-color);
    }

    & > [data-attr="name"]::after {
        content: "(";
    }

    &::after {
        display: flex;
        flex-direction: column;
        justify-content: end;
        content: ")";
    }
}

[data-kind="nth_expr_with_plus"] {
    display: flex;

    & > [data-attr="factor"]::after {
        content: "n+";
    }
}

[data-kind="nth_expr_without_plus"] {
    display: flex;

    & > [data-attr="factor"]::after {
        content: "n";
    }
}

[data-kind="complex-selector"] {
    display: flex;
    gap: 0.25em;
}

[data-kind="rule"]::after,
[data-kind="rule"] > [data-attr="selector"]::after {
    color: var(--brace-color);
}

[data-kind="multi_part_value"] > [data-attr="parts"] {
    display: flex;
    gap: 0.5em;
}

[data-kind="self_selector"] {
    display: flex;

    &::before {
        content: "&";
    }
}

:focus {
    outline: none;
}

[data-kind="or"] {
    display: flex;

    & > [data-attr="lhs"] {
        display: flex;

        &::after {
            content: ",";
        }
    }
}

[data-kind="pseudo-element-selector"] {
    display: flex;
    flex-direction: column;
    justify-content: end;
}

[data-kind="wildcard"]::before {
    content: "*";
}

[data-kind] {
    width: max-content;
}

button {
    font-size: inherit;
}

[data-kind="rule"] {
    overflow-y: hidden;
}

[data-kind="rule"],
[data-kind="keyframes"] {
    padding: 0.25em;
    background-color: rgb(40, 40, 40);
}

[data-kind="keyframe"] {
    width: 100%;
    padding: 0.25em;
}

.--editor > [data-kind="rule"] {
    max-width: 100%;
    width: 100%;
    overflow-y: scroll;
}

[data-kind] {
    height: min-content;
    display: flex;
}

[data-kind="rule"] {
    width: calc(99% - 1em);
    flex-direction: column;
}

[data-kind] .siblings-root {
    background: rgba(30, 30, 30, 0.9);
    position: absolute;
    margin-top: 1.25em;
}

[data-kind="property"] {
    align-items: center;
}

.toggle-comment {
    position: absolute;
    border: 0.1em solid rgb(60, 60, 60);
    background: none;
    font-size: 13px;
    padding: 0;
    width: 1em;
    height: 1em;
    line-height: 0.9;
    margin-left: -1.25em;
    color: var(--foreground-color);
    border-radius: 3px;
    cursor: pointer;

    &:hover {
        background: rgb(50, 50, 50);
    }
}

[data-kind="property"][data-commented="true"] .toggle-comment {
    background-color: rgb(60, 60, 60);

    &:hover {
        border-color: rgb(100, 100, 100);
    }

    &:focus {
        background-color: rgb(80, 80, 80);
    }
}

[data-kind="property"][data-commented="false"] .toggle-comment {
    background-color: rgb(60, 60, 60);
    display: none;
}

[data-kind="property"][data-commented="false"]:hover .toggle-comment {
    display: unset;
    background-color: rgb(100, 100, 100);

    .text {
        display: none;
    }

    &:hover {
        background-color: rgb(150, 150, 150);
    }

    &:focus {
        background-color: rgb(60, 60, 60);
    }
}

[data-kind="property"][data-commented="true"] {
    text-decoration: line-through;
    text-decoration-color: white;
}
