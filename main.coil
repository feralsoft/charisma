import "./html.coil"
import {parse_decl} from "./css-parser.coil"
import {to_html, compile, to_ast} from "./html-ast.coil"
import plugins from "./plugins"

let rules = document:styleSheets.0:rules.take(1).map(:cssText parse_decl 0)
rules.each(|css_ast_node| $(".editor"):append(to_html(css_ast_node)))

let queries = rules.map(|node| [compile(node:query) node]).into(Map{})

-- TODO: make a plugin to handle text input rerender the rule
for [_name plugin] of Object:entries(plugins)
  plugin({
    queries: queries
    def :rebuild()
      for html_node of $$("[data-kind=declaration]")
        -- TODO: this is brittle as hell!
        document:styleSheets.0:deleteRule(0)
        document:styleSheets.0:insertRule(compile(html_node.to_ast()))
        -- TODO: rebuild has to rerun all the plugins!!
      end
    end
  })
end
