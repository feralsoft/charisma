import {to_ast, compile} from "../../html-ast.coil"

def highlight_elements_who_match_query({queries})
  def find_decls_that_apply_to(node) = queries.filter(|[query _]| node:matches(query)).map(1).into([])

  window:addEventListener("click" |e| {
    if e:altKey
      let node = find_decls_that_apply_to(e:target).each(|node| $(".editor"):append(to_html(node)))
    end
  })

  for decl of $$("[data-kind=declaration]")
    let query_node = decl:querySelector("[data-attr=query]")
    let entered = false
    decl:addEventListener("mouseenter" |e| entered = true)
    decl:addEventListener("mouseleave" |e| entered = false)
    window:addEventListener("keydown" |e| {
      if e:ctrlKey if entered
          for elem of $$(query_node.pipe(_.to_ast() compile))
            elem:classList:add("css-query-hover")
          end
      end end
    })
    window:addEventListener("keyup" |e| {
      for elem of $$(query_node.pipe(_.to_ast() compile))
        elem:classList:remove("css-query-hover")
      end
    })
  end
end

export default highlight_elements_who_match_query
