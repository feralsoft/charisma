import {compile, to_ast} from "../../html-ast.coil"
import "./copy-paste.css"

def copy_paste({signal, scope})
  def copy(e, elem, code)
    e:clipboardData:setData("text/plain", code)
    elem:classList:add(scope:class(:copied))
    return setTimeout(|| elem:classList:remove(scope:class(:copied)), 1500)
  end

  signal:listen(document "copy" |e| {
    e:preventDefault()
    -- e:target doesn't understand [data-kind=rule] is active
    -- even though it has tabindex=0.. not sure why, but document:activeElement works
    let elem = document:activeElement
    if let query = elem:closest("[data-attr=query]")
      return copy(e, query, compile(query.to_ast()))
    end if let rule = elem:closest(":is([data-kind=rule], [data-kind=variable])")
      return copy(e, rule, str("\n" compile(rule.to_ast()) ";"))
    end if let decl = elem:closest("[data-kind=decl]")
      return copy(e, decl, compile(decl.to_ast()))
    end
  })
end

export default copy_paste
